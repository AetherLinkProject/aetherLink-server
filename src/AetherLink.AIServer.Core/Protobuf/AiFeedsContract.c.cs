// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ai_feeds_contract.proto
// </auto-generated>
// Original file comments:
// the version of the language, use proto3 for contracts
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AetherLink.Contracts.AIFeeds {

  #region Events
  public partial class RequestStarted : aelf::IEvent<RequestStarted>
  {
    public global::System.Collections.Generic.IEnumerable<RequestStarted> GetIndexed()
    {
      return new List<RequestStarted>
      {
      };
    }

    public RequestStarted GetNonIndexed()
    {
      return new RequestStarted
      {
        RequestId = RequestId,
        Commitment = Commitment,
      };
    }
  }

  public partial class AIReportTransmitted : aelf::IEvent<AIReportTransmitted>
  {
    public global::System.Collections.Generic.IEnumerable<AIReportTransmitted> GetIndexed()
    {
      return new List<AIReportTransmitted>
      {
      };
    }

    public AIReportTransmitted GetNonIndexed()
    {
      return new AIReportTransmitted
      {
        RequestId = RequestId,
        Transmitter = Transmitter,
        Enclave = Enclave,
      };
    }
  }

  public partial class AIOracleConfigSet : aelf::IEvent<AIOracleConfigSet>
  {
    public global::System.Collections.Generic.IEnumerable<AIOracleConfigSet> GetIndexed()
    {
      return new List<AIOracleConfigSet>
      {
      };
    }

    public AIOracleConfigSet GetNonIndexed()
    {
      return new AIOracleConfigSet
      {
        Config = Config,
      };
    }
  }

  #endregion
  public static partial class AIFeedsContractContainer
  {
    static readonly string __ServiceName = "ai.AIFeedsContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::AetherLink.Contracts.AIFeeds.InitializeInput> __Marshaller_ai_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AetherLink.Contracts.AIFeeds.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AetherLink.Contracts.AIFeeds.AIOracleConfig> __Marshaller_ai_AIOracleConfig = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AetherLink.Contracts.AIFeeds.AIOracleConfig.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AetherLink.Contracts.AIFeeds.StartAIRequestInput> __Marshaller_ai_StartAIRequestInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AetherLink.Contracts.AIFeeds.StartAIRequestInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AetherLink.Contracts.AIFeeds.AIRequest> __Marshaller_ai_AIRequest = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AetherLink.Contracts.AIFeeds.AIRequest.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AetherLink.Contracts.AIFeeds.AIRequestTransmitInput> __Marshaller_ai_AIRequestTransmitInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AetherLink.Contracts.AIFeeds.AIRequestTransmitInput.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AetherLink.Contracts.AIFeeds.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::AetherLink.Contracts.AIFeeds.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_ai_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetAdmin = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAdmin",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AetherLink.Contracts.AIFeeds.AIOracleConfig, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetConfig = new aelf::Method<global::AetherLink.Contracts.AIFeeds.AIOracleConfig, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetConfig",
        __Marshaller_ai_AIOracleConfig,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AetherLink.Contracts.AIFeeds.AIOracleConfig> __Method_GetConfig = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AetherLink.Contracts.AIFeeds.AIOracleConfig>(
        aelf::MethodType.View,
        __ServiceName,
        "GetConfig",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_ai_AIOracleConfig);

    static readonly aelf::Method<global::AetherLink.Contracts.AIFeeds.StartAIRequestInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_StartAIRequest = new aelf::Method<global::AetherLink.Contracts.AIFeeds.StartAIRequestInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "StartAIRequest",
        __Marshaller_ai_StartAIRequestInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AetherLink.Contracts.AIFeeds.AIRequest> __Method_GetAIRequest = new aelf::Method<global::AElf.Types.Hash, global::AetherLink.Contracts.AIFeeds.AIRequest>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAIRequest",
        __Marshaller_aelf_Hash,
        __Marshaller_ai_AIRequest);

    static readonly aelf::Method<global::AetherLink.Contracts.AIFeeds.AIRequestTransmitInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AIRequestTransmit = new aelf::Method<global::AetherLink.Contracts.AIFeeds.AIRequestTransmitInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AIRequestTransmit",
        __Marshaller_ai_AIRequestTransmitInput,
        __Marshaller_google_protobuf_Empty);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AetherLink.Contracts.AIFeeds.AiFeedsContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::AetherLink.Contracts.AIFeeds.AiFeedsContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of AIFeedsContract</summary>
    // public abstract partial class AIFeedsContractBase : AElf.Sdk.CSharp.CSharpSmartContract<AetherLink.Contracts.AIFeeds.AIFeedsContractState>
    // {
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::AetherLink.Contracts.AIFeeds.InitializeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetAdmin(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetConfig(global::AetherLink.Contracts.AIFeeds.AIOracleConfig input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AetherLink.Contracts.AIFeeds.AIOracleConfig GetConfig(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty StartAIRequest(global::AetherLink.Contracts.AIFeeds.StartAIRequestInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AetherLink.Contracts.AIFeeds.AIRequest GetAIRequest(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty AIRequestTransmit(global::AetherLink.Contracts.AIFeeds.AIRequestTransmitInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    // }
    //
    // public static aelf::ServerServiceDefinition BindService(AIFeedsContractBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors)
    //       .AddMethod(__Method_Initialize, serviceImpl.Initialize)
    //       .AddMethod(__Method_GetAdmin, serviceImpl.GetAdmin)
    //       .AddMethod(__Method_SetConfig, serviceImpl.SetConfig)
    //       .AddMethod(__Method_GetConfig, serviceImpl.GetConfig)
    //       .AddMethod(__Method_StartAIRequest, serviceImpl.StartAIRequest)
    //       .AddMethod(__Method_GetAIRequest, serviceImpl.GetAIRequest)
    //       .AddMethod(__Method_AIRequestTransmit, serviceImpl.AIRequestTransmit).Build();
    // }

  }
}
#endregion

